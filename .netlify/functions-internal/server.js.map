{
  "version": 3,
  "sources": ["css-bundle-update-plugin-ns:/Users/hectorbliss/courses/blog/curso-blog-remix/node_modules/@remix-run/css-bundle/dist/index.js", "<stdin>", "../../app/entry.server.tsx", "../../app/root.tsx", "../../app/routes/dash_.$postId.edit.tsx", "../../app/routes/blog_.$postSlug.tsx", "../../app/routes/sitemap[.]xml.tsx", "../../app/routes/feed[.]atom.tsx", "../../app/routes/feed[.]json.tsx", "../../app/routes/feed[.]xml.tsx", "../../app/routes/_index.tsx", "../../app/routes/login.tsx", "../../app/sessions.ts", "../../app/utils/getOrCreateUser.ts", "../../app/utils/db.ts", "../../app/utils/zod.ts", "../../app/routes/blog.tsx", "../../app/utils/getBasicMetadata.ts", "../../app/routes/dash.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["/**\n * @remix-run/css-bundle v1.17.1\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n// Injected by `cssBundlePlugin`\nlet cssBundleHref = typeof undefined === \"string\" ? undefined : undefined;\n\nexports.cssBundleHref = cssBundleHref;\n", "export * from \"@remix-run/dev/server-build\";", "/**\n * By default, Remix will handle generating the HTTP Response for you.\n * You are free to delete this file if you'd like to, but if you ever want it revealed again, you can run `npx remix reveal` \u2728\n * For more information, see https://remix.run/file-conventions/entry.server\n */\n\nimport { PassThrough } from \"node:stream\";\n\nimport type { AppLoadContext, EntryContext } from \"@remix-run/node\";\nimport { Response } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport isbot from \"isbot\";\nimport { renderToPipeableStream } from \"react-dom/server\";\n\nconst ABORT_DELAY = 5_000;\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext,\n  loadContext: AppLoadContext\n) {\n  return isbot(request.headers.get(\"user-agent\"))\n    ? handleBotRequest(\n        request,\n        responseStatusCode,\n        responseHeaders,\n        remixContext\n      )\n    : handleBrowserRequest(\n        request,\n        responseStatusCode,\n        responseHeaders,\n        remixContext\n      );\n}\n\nfunction handleBotRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return new Promise((resolve, reject) => {\n    let shellRendered = false;\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer\n        context={remixContext}\n        url={request.url}\n        abortDelay={ABORT_DELAY}\n      />,\n      {\n        onAllReady() {\n          shellRendered = true;\n          const body = new PassThrough();\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(body, {\n              headers: responseHeaders,\n              status: responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError(error: unknown) {\n          reject(error);\n        },\n        onError(error: unknown) {\n          responseStatusCode = 500;\n          // Log streaming rendering errors from inside the shell.  Don't log\n          // errors encountered during initial shell rendering since they'll\n          // reject and get logged in handleDocumentRequest.\n          if (shellRendered) {\n            console.error(error);\n          }\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n\nfunction handleBrowserRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return new Promise((resolve, reject) => {\n    let shellRendered = false;\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer\n        context={remixContext}\n        url={request.url}\n        abortDelay={ABORT_DELAY}\n      />,\n      {\n        onShellReady() {\n          shellRendered = true;\n          const body = new PassThrough();\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(body, {\n              headers: responseHeaders,\n              status: responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError(error: unknown) {\n          reject(error);\n        },\n        onError(error: unknown) {\n          responseStatusCode = 500;\n          // Log streaming rendering errors from inside the shell.  Don't log\n          // errors encountered during initial shell rendering since they'll\n          // reject and get logged in handleDocumentRequest.\n          if (shellRendered) {\n            console.error(error);\n          }\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n", "import { cssBundleHref } from \"@remix-run/css-bundle\";\nimport type { LinksFunction } from \"@remix-run/node\";\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration } from\n\"@remix-run/react\";\nimport tailwind from \"./styles/style.css\";\n\nexport const links: LinksFunction = () => [\n...(cssBundleHref ?\n[\n{ rel: \"stylesheet\", href: cssBundleHref },\n{\n  rel: \"stylesheet\",\n  href: tailwind\n}] :\n\n[\n{\n  rel: \"stylesheet\",\n  href: tailwind\n}])];\n\n\n\nexport default function App() {\n  return (\n    <html lang=\"en\" className=\"dark\">\n      <head>\n        <meta charSet=\"utf-8\" />\n        <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\" />\n        <Meta />\n        <Links />\n      </head>\n      <body>\n        <Outlet />\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>);\n\n}", "import {\n  type LoaderFunction,\n  // type LinksFunction,\n  type ActionFunction\n  // json,\n} from \"@remix-run/node\";\n// import MarkdownEditor from \"~/components/MarkDownEditor.client\";\nimport {\n  useFetcher\n  // useLoaderData\n} from \"@remix-run/react\";\n// import slugify from \"slugify\";\n// import { type UpdatePostType, updatePostSchema } from \"~/utils/zod\";\n// import { db } from \"~/utils/db\";\nimport {\n  //  toast,\n  Toaster } from\n\"react-hot-toast\";\nimport {\n  Suspense\n  // createRef,\n  // useEffect,\n  // useLayoutEffect\n} from \"react\";\n// import { signal } from \"@preact/signals-react\";\n// import invariant from \"tiny-invariant\";\n// import Switch from \"~/components/Switch\";\n// import { markdownParser } from \"~/utils/markdoc.server\";\n// import { type RenderableTreeNodes } from \"@markdoc/markdoc\";\n// import prismjsStyles from \"~/styles/prismjs.css\"; // <= \uD83D\uDEE0\uFE0F Descomenta\n// import prism from \"prismjs\"; // <= \uD83D\uDEE0\uFE0F Descomenta\n\n// export const links: LinksFunction = () => { // <= \uD83D\uDEE0\uFE0F Descomenta\n//   return [\n//     {\n//       rel: \"stylesheet\",\n//       href: prismjsStyles,\n//     },\n//   ];\n// };\n\n// type LoaderData = UpdatePostType & { content: RenderableTreeNodes }; // <= \uD83D\uDEE0\uFE0F Descomenta\nexport const loader: LoaderFunction = async ({ params }) => {\n  // const post = await db.post.findUnique({  // <= \uD83D\uDEE0\uFE0F Descomenta\n  //   where: { id: params.postId },\n  //   select: {\n  //     title: true,\n  //     id: true,\n  //     body: true,\n  //     tags: true,\n  //     published: true,\n  //     cover: true,\n  //   },\n  // });\n  // if (!post) { // <= \uD83D\uDEE0\uFE0F Descomenta\n  //   return json({ ok: false, error: \"not found\" }, { status: 404 });\n  // }\n  // const content = await markdownParser(post.body); // <= \uD83D\uDEE0\uFE0F Descomenta\n  // return { ...post, content }; // <= \uD83D\uDEE0\uFE0F Descomenta\n  return null; // <= \uD83D\uDEE0\uFE0F Borra\n};\n\nexport const action: ActionFunction = async ({ request, params }) => {\n  // const formData = await request.formData(); // <= \uD83D\uDEE0\uFE0F Descomenta\n  // const form = Object.fromEntries(formData) as Record<string, string>;\n\n  // form.slug = slugify(form.title + \"-\" + Date.now());\n  // const validated = updatePostSchema.safeParse(form);\n  // if (!validated.success) {\n  //   return json({ ok: false, error: validated.error }, { status: 400 });\n  // }\n  // await db.post.update({\n  //   where: {\n  //     id: params.postId,\n  //   },\n  //   data: validated.data,\n  // });\n  return { ok: true };\n};\n\nexport default function PostEdit() {\n  //  \uD83D\uDEE0\uFE0F Descomenta =>\n  // const { title, content, body, cover, tags, published } =\n  //   useLoaderData<LoaderData>();\n  const fetcher = useFetcher();\n  // const formRef = createRef<HTMLFormElement>();\n  // const timeout = signal<ReturnType<typeof setTimeout> | null>(null);\n  // useLayoutEffect(() => {\n  //   prism.highlightAll();\n  // }, []);\n  // useEffect(() => {\n  //   if (fetcher.data?.ok) {\n  //     toast.success(\"Se ha guardado tu post\", {\n  //       id: \"exito\",\n  //     });\n  //   } else if (fetcher.data && !fetcher.data.ok) {\n  //     toast.error(\"No se ha podido guardar\", {\n  //       id: \"error\",\n  //     });\n  //     console.error(fetcher.data?.error);\n  //   }\n  // }, [fetcher]);\n\n  // const handleAutoSave = (content: string) => {\n  // \uD83D\uDEE0\uFE0F Descomenta =>\n  // if (timeout.value) {\n  //   clearTimeout(timeout.value);\n  // }\n  // timeout.value = setTimeout(() => {\n  //   invariant(formRef.current !== null); // making TS happy\n  //   const formData = new FormData(formRef.current);\n  //   formData.append(\"body\", content);\n  //   fetcher.submit(formData, { method: \"post\" });\n  // }, 2000);\n  // };\n\n  return (\n    <article className=\"dark:bg-slate-800 min-h-screen dark:text-slate-200\">\n      <main className=\"max-w-5xl mx-auto py-20 px-4\">\n        {/* <fetcher.Form method=\"post\" ref={formRef}>\n           <div className=\"\">\n             <label className=\"text-xs mb-2\">Editando tu post:</label>\n             <input\n               className=\"py-2 px-4 rounded-md w-full text-slate-500\"\n               type=\"text\"\n               placeholder=\"Escribe un t\u00EDtulo\"\n               defaultValue={title}\n               name=\"title\"\n             />\n           </div>\n           <section className=\"flex gap-4 items-end\">\n             <div className=\"\">\n               <label className=\"text-xs\">Agrega una imagen de portada:</label>\n               <input\n                 className=\"py-2 px-4 rounded-md w-full text-slate-500\"\n                 type=\"text\"\n                 placeholder=\"Pega el link de una imagen\"\n                 defaultValue={cover}\n                 name=\"cover\"\n               />\n             </div>\n             <div className=\"\">\n               <label className=\"text-xs \">Agrega un tag:</label>\n               <input\n                 className=\"py-2 px-4 rounded-md w-full text-slate-500\"\n                 type=\"text\"\n                 placeholder=\"Escribe tags separadas con coma (,)\"\n                 defaultValue={tags}\n                 name=\"tags\"\n               />\n             </div>\n             <div>\n               <label htmlFor=\"\">P\u00FAblico</label>\n               <Switch name=\"published\" defaultValue={published} />\n             </div>\n             <button\n               disabled={fetcher.state !== \"idle\"}\n               className=\"disabled:bg-gray-600 px-6 bg-indigo-500 text-white rounded-md hover:bg-indigo-600 py-2\"\n             >\n               Guardar\n             </button>\n           </section>\n          </fetcher.Form> */}\n        <div className=\"flex text-red-500\">\n          {fetcher.data?.error &&\n          <ul>\n              {fetcher.data.error.issues.map((err) =>\n            <li key={err.path}>\n                  {err.path} {err.message}\n                </li>\n            )}\n            </ul>}\n\n        </div>\n        <hr className=\"border-none bg-indigo-500 h-[1px] my-2\" />\n        <Suspense fallback={<p>Cargando...</p>}>\n          {/* <MarkdownEditor\n             content={content}\n             defaultValue={body}\n             onChange={handleAutoSave}\n            /> */}\n        </Suspense>\n      </main>\n      <Toaster />\n    </article>);\n\n}", "// import type { RenderableTreeNodes } from \"@markdoc/markdoc\";\nimport {\n  // type V2_MetaFunction,\n  type LinksFunction,\n  type LoaderArgs } from\n\"@remix-run/node\";\n// import { useLoaderData } from \"@remix-run/react\";\nimport { Suspense } from \"react\";\n// import { ContentToJSX } from \"~/components/ContentToJSX.client\";\n// import { db } from \"~/utils/db\";\n// import { markdownParser } from \"~/utils/markdoc.server\";\n// import Avatar from \"~/components/Avatar\";\n// import type { Post, User } from \"@prisma/client\";\n// import styles from \"~/styles/prismjs.css\";\n// import markdownStyles from \"~/styles/markdown.css\";\n// import { getBasicMetaData } from \"./blog\";\n\n// export const meta: V2_MetaFunction = ({ data }) => {\n//   return getBasicMetaData({\n//     extra: [\n//       {\n//         property: \"og:title\",\n//         content: `Lee ahora: ${data.post.title}`,\n//       },\n//       {\n//         property: \"og:image\",\n//         content: data.post.cover\n//           ? data.post.cover\n//           : \"https://i.imgur.com/vq9Xmon.png\",\n//       },\n//       { property: \"og:description\", content: data.post.body.slice(1, 30) },\n//     ],\n//   });\n// };\n\nexport const links: LinksFunction = () => [\n  // {\n  //   rel: \"stylesheet\",\n  //   href: styles,\n  // },\n  // {\n  //   rel: \"stylesheet\",\n  //   href: markdownStyles,\n  // },\n];\n\n// type LoaderData = {\n//   content: RenderableTreeNodes;\n//   post: Post & { author: User };\n// };\nexport const loader = async ({ params }: LoaderArgs) => {\n  // const post = await db.post.findUnique({\n  //   where: { slug: params.postSlug },\n  //   select: {\n  //     title: true,\n  //     body: true,\n  //     createdAt: true,\n  //     author: true,\n  //   },\n  // });\n  // const content = await markdownParser(post.body);\n  // return { content, post };\n  return null; // <= \uD83D\uDEE0\uFE0F Borra\n};\n\nexport default function PostDetail() {\n  // we are ignoring This TS alert\n  // const { content, post } = useLoaderData<LoaderData>();\n\n  return (\n    <>\n      {/* \uD83D\uDEE0\uFE0F Borra => */}\n      <h2 className=\"mx-auto text-3xl text-center py-20\">\n        B\u00F3rrame y sustit\u00FAyeme \uD83D\uDC7D\n      </h2>\n      <main className=\"max-w-2xl mx-auto py-20 \">\n        {/* <Avatar date={new Date(post.createdAt)} author={post.author} /> */}\n        <Suspense fallback={<p>Cargando...</p>}>\n          {/* <ContentToJSX content={content} /> */}\n        </Suspense>\n      </main>\n    </>);\n\n}", "import { type LoaderFunction } from \"@remix-run/node\";\n// import { db } from \"~/utils/db\";\n\nexport const loader: LoaderFunction = async ({ params, request }) => {\n  // const url = new URL(request.url);\n  // const allPosts = await db.post.findMany({\n  //   where: { published: true },\n  //   include: { author: true },\n  // });\n\n  // const postItems = allPosts.map((post) => {\n  //   return [\n  //     `<url>`,\n  //     `<loc>https://curso-blog-remix.netlify.app/blog/${post.slug}</loc>`,\n  //     `<lastmod>${post.createdAt}</lastmod>`,\n  //     `</url>`,\n  //   ].join(\"\");\n  // });\n\n  // const xml = [\n  //   `<?xml version=\"1.0\" encoding=\"UTF-8\"?>`,\n  //   `<urlset xmlns=\"http://www.sitemaps.org/schemas/sitemap/0.9\">`,\n  //   // Agregamos nuestras tres feeds a la lista de rutas (y cualquier otra ruta que quieras indexar)\n  //   `<url>`,\n  //   `<loc>https://curso-blog-remix.netlify.app/feed.xml</loc>`,\n  //   `<lastmod>${new Date()}</lastmod>`,\n  //   `</url>`,\n\n  //   `<url>`,\n  //   `<loc>https://curso-blog-remix.netlify.app/feed.json</loc>`,\n  //   `<lastmod>${new Date()}</lastmod>`,\n  //   `</url>`,\n\n  //   `<url>`,\n  //   `<loc>https://curso-blog-remix.netlify.app/feed.atom</loc>`,\n  //   `<lastmod>${new Date()}</lastmod>`,\n  //   `</url>`,\n  //   // index page, or /blog page\n  //   `<url>`,\n  //   `<loc>${url.origin}/blog</loc>`,\n  //   `<lastmod>${new Date()}</lastmod>`,\n  //   `</url>`,\n  //   ...postItems,\n  //   `</urlset>`,\n  // ];\n\n  return new Response(\n    // xml.join(\"\") // <= \uD83D\uDEE0\uFE0F Descomenta\n    \"<xml tags>\", // <= \uD83D\uDEE0\uFE0F Borra\n    {\n      headers: {\n        \"Content-Type\": \"application/xml; charset=utf-8\",\n        \"x-content-type-options\": \"nosniff\",\n      },\n    }\n  );\n};\n", "import { type LoaderFunction } from \"@remix-run/node\";\n// import { getFeed } from \"~/utils/feed.server\";\n\nexport const loader: LoaderFunction = async () => {\n  // const feed = await getFeed(\"atom1\");\n  return new Response(\n    `<xml tags>`, // <= \uD83D\uDEE0\uFE0F Sustit\u00FAye\n    {\n      headers: {\n        \"Content-Type\": \"application/atom+xml; charset=utf-8\",\n        \"x-content-type-options\": \"nosniff\",\n      },\n    }\n  );\n};\n", "import { type LoaderFunction } from \"@remix-run/node\";\n// import { getFeed } from \"~/utils/feed.server\";\n\nexport const loader: LoaderFunction = async () => {\n  // const feed = await getFeed(\"json1\");\n  return new Response(\n    `{\"json\":\"format\"}`, // <= \uD83D\uDEE0\uFE0F Sustit\u00FAye\n    {\n      headers: {\n        \"Content-Type\": \"application/json; charset=utf-8\",\n        \"x-content-type-options\": \"nosniff\",\n      },\n    }\n  );\n};\n", "import { type LoaderFunction } from \"@remix-run/node\";\n// import { getFeed } from \"~/utils/feed.server\";\n\nexport const loader: LoaderFunction = async () => {\n  // const feed = await getFeed(\"rss2\");\n  return new Response(\n    `<xml tags>`, // <= \uD83D\uDEE0\uFE0F Sustit\u00FAye\n    {\n      headers: {\n        \"Content-Type\": \"application/rss+xml;  charset=utf-8\",\n        \"x-content-type-options\": \"nosniff\",\n      },\n    }\n  );\n};\n", "import type { V2_MetaFunction } from \"@remix-run/node\";\n// import { useLoaderData } from \"@remix-run/react\";\n// Meta function opcional\nexport const meta: V2_MetaFunction = () => {\n  return [\n    { title: \"Construye un blog con Remix\" },\n    { name: \"description\", content: \"Hola blissmo\" },\n  ];\n};\n\n// El loader consigue las variables de entorno desde el servidor.\nexport const loader = async () => {\n  return {\n    NODE_ENV: process.env.NODE_ENV,\n    GOOGLE_CLIENT_ID: process.env.GOOGLE_CLIENT_ID,\n  };\n};\n\nexport default function Index() {\n  // const { NODE_ENV, GOOGLE_CLIENT_ID } = useLoaderData();\n  return (\n    <div className=\"flex min-h-screen main\">\n      <h2 className=\"self-center mx-auto text-2xl px-4 text-indigo-500\">\n        \uD83D\uDEE0\uFE0F B\u00F3rrame y sustit\u00FAyeme por un login bonito \uD83D\uDC7D\n      </h2>\n      {/* <div\n        id=\"g_id_onload\"\n        data-client_id={GOOGLE_CLIENT_ID}\n        data-login_uri={\n          NODE_ENV === \"development\"\n            ? \"http://localhost:3000/login\"\n            : \"https://curso-blog-remix.netlify.app/login\"\n        }\n        data-cancel_on_tap_outside=\"false\"\n      ></div>\n      <div\n        dangerouslySetInnerHTML={{\n          __html: ` <script src=\"https://accounts.google.com/gsi/client\" async defer></script>`,\n        }}\n      ></div>\n      <p className=\"text-xs absolute bottom-[36%] text-gray-500 w-full left-0 text-center pr-8\">\n        Culaquier otro t\u00E9rmino y condici\u00F3n necesario de mencionar\n      </p> */}\n    </div>\n  );\n}\n", "import {\n  type ActionFunction,\n  redirect,\n  type LoaderFunction,\n  json,\n} from \"@remix-run/node\";\nimport { useLoaderData } from \"@remix-run/react\";\nimport { commitSession, getSession } from \"~/sessions\";\nimport getOrCreateUser from \"~/utils/getOrCreateUser\";\nimport { oneTapDataSchema, type OneTapType } from \"~/utils/zod\";\n\nexport const action: ActionFunction = async ({ request }) => {\n  const formData = await request.formData();\n  const body = Object.fromEntries(formData);\n  const data: OneTapType = {\n    credential: String(body.credential),\n    g_csrf_token: String(body.g_csrf_token), // m\u00E9todo de seguridad recomendado\n  };\n\n  const validated = oneTapDataSchema.safeParse(data);\n  if (!validated.success) {\n    return json(null, { status: 404 });\n  }\n\n  const user = await getOrCreateUser(data.credential);\n  const session = await getSession(request.headers.get(\"Cookie\"));\n  session.set(\"userId\", user.id);\n  return redirect(\"/dash\", {\n    headers: { \"Set-Cookie\": await commitSession(session) },\n  });\n};\n\nexport const loader: LoaderFunction = async () => {\n  return {\n    GOOGLE_CLIENT_ID: process.env.GOOGLE_CLIENT_ID,\n    REDIRECT_URL:\n      process.env.NODE_ENV === \"development\"\n        ? \"http://localhost:3000/login\"\n        : \"PRODUCTION_URL\",\n  };\n};\n\nexport default function Login() {\n  const { GOOGLE_CLIENT_ID, REDIRECT_URL } =\n    useLoaderData<ReturnType<typeof loader>>();\n\n  return (\n    <div className=\"flex justify-center items-center py-20 border-red-500\">\n      <div\n        id=\"g_id_onload\"\n        data-client_id={GOOGLE_CLIENT_ID}\n        data-login_uri={REDIRECT_URL}\n        data-cancel_on_tap_outside=\"false\"\n      ></div>\n      <div\n        dangerouslySetInnerHTML={{\n          __html: ` <script src=\"https://accounts.google.com/gsi/client\" async defer></script>`,\n        }}\n      ></div>\n      <h2 className=\"text-6xl font-bold uppercase\">Inciando sesi\u00F3n</h2>\n    </div>\n  );\n}\n", "import { createCookieSessionStorage } from \"@remix-run/node\"; // or cloudflare/deno\n\ntype SessionData = {\n  userId: string;\n};\n\ntype SessionFlashData = {\n  error: string;\n};\n\nconst { getSession, commitSession, destroySession } =\n  createCookieSessionStorage<SessionData, SessionFlashData>({\n    // a Cookie from `createCookie` or the CookieOptions to create one\n    cookie: {\n      name: \"__session\",\n      domain: \"hectorbliss.com\",\n      httpOnly: true,\n      maxAge: 60 * 60 * 24 * 7, // 7 d\u00EDas\n      path: \"/\",\n      sameSite: \"lax\",\n      secrets: [\"Bl15sM0\"],\n      secure: true,\n    },\n  });\n\nexport { getSession, commitSession, destroySession };\n", "import jwtDecode from \"jwt-decode\";\nimport { db } from \"./db\";\n\nexport default async function getOrCreateUser(credential: string) {\n  const decoded = jwtDecode(credential) as Record<string, string>;\n\n  const email = decoded.email;\n  return await db.user.upsert({\n    where: {\n      email,\n    },\n    create: {\n      name: decoded.name,\n      email: decoded.email,\n      picture: decoded.picture,\n    },\n    update: {\n      name: decoded.name,\n      picture: decoded.picture,\n    },\n  });\n}\n", "import { PrismaClient } from \"@prisma/client\";\n\nlet db: PrismaClient;\n\ndeclare global {\n  var __db__: PrismaClient | undefined;\n}\nif (process.env.NODE_ENV === \"production\") {\n  db = new PrismaClient();\n} else {\n  if (!global.__db__) {\n    global.__db__ = new PrismaClient();\n  }\n  db = global.__db__;\n  db.$connect();\n}\n\nexport { db };\n", "import { z } from \"zod\";\n\nexport function booleanTransformer(value: string) {\n  if (typeof value === \"string\" && value.toLowerCase() === \"true\") {\n    return true;\n  } else if (typeof value === \"string\" && value.toLowerCase() === \"false\") {\n    return false;\n  }\n  if (typeof value === \"string\" && value === \"\") {\n    return [];\n  }\n  return value;\n}\n\nexport const oneTapDataSchema = z.object({\n  credential: z.string(),\n  g_csrf_token: z.string(),\n});\nexport type OneTapType = z.infer<typeof oneTapDataSchema>;\n\nexport const readPostSchema = z.object({\n  title: z.string().min(5),\n  id: z.string(),\n  cover: z.string(),\n  slug: z.string(),\n  createdAt: z.date(),\n  author: z.any(),\n});\nexport type ReadPostType = z.infer<typeof readPostSchema>;\n\nexport const updatePostSchema = z.object({\n  cover: z.string().optional(),\n  title: z.string().min(5),\n  slug: z.string().min(5),\n  body: z.string().optional(),\n  published: z.preprocess(\n    (val) =>\n      String(val).toLowerCase() === \"true\" ||\n      val === true ||\n      String(val).toLowerCase() === \"on\"\n        ? true\n        : false,\n    z.boolean()\n  ),\n  tags: z.string().optional(),\n});\nexport type UpdatePostType = z.infer<typeof updatePostSchema>;\n", "import { type V2_MetaFunction, type LoaderFunction } from \"@remix-run/node\";\n// import { useLoaderData } from \"@remix-run/react\";\n// import { BlogCard } from \"~/components/BlogCard\";\n// import { db } from \"~/utils/db\";\nimport { getBasicMetaData } from \"~/utils/getBasicMetadata\";\n// import type { ReadPostType } from \"~/utils/zod\";\n\nexport const meta: V2_MetaFunction = () => {\n  return getBasicMetaData();\n};\n\n// type LoaderData = {\n//   posts: ReadPostType[];\n// };\nexport const loader: LoaderFunction = async () => {\n  // const posts = await db.post.findMany({\n  //   where: { published: true },\n  //   select: {\n  //     title: true,\n  //     createdAt: true,\n  //     author: true,\n  //     id: true,\n  //     slug: true,\n  //     cover: true,\n  //   },\n  // });\n  // return { posts };\n  return null; // <= \uD83D\uDEE0\uFE0F Borra\n};\n\nexport default function Blog() {\n  // const { posts } = useLoaderData<LoaderData>();\n  return (\n    <article className=\"dark:bg-slate-800 min-h-screen\">\n      <main className=\"max-w-3xl mx-auto py-20 px-4 flex justify-between gap-4 items-center \">\n        <div>\n          <h2 className=\"font-medium text-4xl text-white\">\n            \u00A1Hola! \uD83D\uDC4B\uD83C\uDFFC Bienvenid@ a mi jard\u00EDn digital. \uD83E\uDEB4\n          </h2>\n          <p className=\"text-2xl font-thin my-4 text-gray-200\">\n            Soy @blissmo \uD83E\uDD13 y me gusta compartir lo que aprendo sobre desarrollo\n            web independiente.\n          </p>\n          <p className=\"text-2xl my-4 text-gray-200\">\n            Ultimamente intento escribir y narrar bien. \u270D\uD83C\uDFFC\n          </p>\n        </div>\n        <img\n          className=\"rounded-3xl max-w-xs hover:rotate-3 hover:scale-105 hover:filter-none transition-all filter grayscale\"\n          src=\"https://i.imgur.com/OtuQ5J8.png\"\n          alt=\"Chilango at Prague\"\n        />\n      </main>\n      <section className=\"max-w-3xl mx-auto py-4 flex gap-4 flex-wrap\">\n        {/* {posts.map((post) => (\n          <BlogCard {...post} key={post.id} />\n        ))} */}\n        {/* <BlogCard\n          createdAt={\"6/19/2023\"}\n          title=\"Post de prueba\"\n          slug=\"post-de-prueba\"\n          cover=\"https://i.imgur.com/YH7iDl1.png\"\n        /> */}\n      </section>\n\n      {/* {posts.length < 1 && ( // <= \uD83D\uDEE0\uFE0F Descomenta */}\n      {true && ( // <= \uD83D\uDEE0\uFE0F Borra\n        <p className=\"bg-gray-600 text-gray-200 text-center py-12 max-w-3xl mx-auto block rounded-2xl text-xl font-thin hover:scale-95 transition-all\">\n          {\" \"}\n          No he escrito nada a\u00FAn \uD83D\uDE25{\" \"}\n        </p>\n      )}\n    </article>\n  );\n}\n", "export const getBasicMetaData = ({\n  title = \"blissmo blog\",\n  description = \"Aprende algo nuevo hoy.\",\n  extra = [\n    {\n      property: \"og:image\",\n      content: \"https://avatars.githubusercontent.com/u/7883990?v=4\",\n    },\n    {\n      property: \"og:url\",\n      content: \"https://curso-blog-remix.netlify.app/blog\",\n    },\n  ],\n}: {\n  title?: string;\n  description?: string;\n  extra?: { property: string; content: string }[];\n} = {}) => {\n  return [\n    {\n      title,\n    },\n    { name: \"description\", content: description },\n    {\n      property: \"og:title\",\n      content: title,\n    },\n\n    ...extra,\n  ];\n};\n", "// import type { Post } from \"@prisma/client\"; // <= \uD83D\uDEE0\uFE0F Descomenta opci\u00F3n 1\n// import { ReadPostType } from \"~/utils/zod\"; // <= \uD83D\uDEE0\uFE0F Descomenta opci\u00F3n 2\nimport {\n  // redirect, // <= \uD83D\uDEE0\uFE0F Descomenta\n  type ActionFunction,\n  type LoaderFunction,\n} from \"@remix-run/node\";\nimport {\n  Form,\n  // useLoaderData, // <= \uD83D\uDEE0\uFE0F Descomenta\n  useNavigation,\n} from \"@remix-run/react\";\n// import slugify from \"slugify\"; // <= \uD83D\uDEE0\uFE0F Descomenta\n// import { PostCard } from \"~/components/PostCard\"; // <= \uD83D\uDEE0\uFE0F Descomenta\n// import { db } from \"~/utils/db\"; // <= \uD83D\uDEE0\uFE0F Descomenta\n\nexport const action: ActionFunction = async ({ request }) => {\n  // const formData = await request.formData(); // <= \uD83D\uDEE0\uFE0F Descomenta\n  // const intent = formData.get(\"intent\");\n  // if (intent === \"new-post\") {\n  //   const post = await db.post.create({\n  //     data: {\n  //       userId: \"648ce85a2e43deef9f5b7a87\", //@TODO from cookie\n  //       slug: slugify(\"nuevo-post-\" + Date.now()),\n  //     },\n  //   });\n  //   throw redirect(`/dash/${post.id}/edit`);\n  // }\n  return null;\n};\n\n// type LoaderData = { posts: Post[] }; // <= \uD83D\uDEE0\uFE0F Descomenta\nexport const loader: LoaderFunction = async ({ request }) => {\n  // const user=\n  // const posts = await db.post.findMany(); // \uD83D\uDEE0\uFE0F Descomenta\n  // return { posts };\n  return null; // <= \uD83D\uDEE0\uFE0F Borra\n};\n\nexport default function Dash() {\n  // const { posts } = useLoaderData<LoaderData>();  // <= \uD83D\uDEE0\uFE0F Descomenta\n  const navigation = useNavigation();\n  return (\n    <article className=\"dark:bg-slate-800 min-h-screen dark:text-gray-200 py-20\">\n      <nav className=\"flex justify-between items-center max-w-3xl mx-auto\">\n        <div>\n          <h2 className=\"block text-3xl font-bold mt-4 px-4 text-left\">\n            Todos tus posts\n          </h2>\n          <p className=\"px-4 text-md font-thin\">Administra tu blog</p>\n        </div>\n        <Form method=\"post\">\n          <button\n            disabled={navigation.state !== \"idle\"}\n            type=\"submit\"\n            name=\"intent\"\n            value=\"new-post\"\n            className=\"text-white mr-4 bg-indigo-500 py-2 px-8 rounded-md hover:bg-indigo-600 disabled:bg-gray-500\"\n          >\n            {navigation.state !== \"idle\" ? \"Cargando...\" : \"Crear nuevo +\"}\n          </button>\n        </Form>\n      </nav>\n      {/* \uD83D\uDEE0\uFE0F Descomenta \u2935\uFE0F */}\n      {/* <section className=\"max-w-3xl mx-auto flex flex-wrap gap-2 py-20 \">\n        {posts.map((p) => (\n          <PostCard id={p.id} title={p.title} key={p.id} />\n        ))}\n      </section> */}\n    </article>\n  );\n}\n", "export default {'entry':{'module':'/build/entry.client-XJ3EDVLX.js','imports':['/build/_shared/chunk-XEM76Q7B.js','/build/_shared/chunk-HYDBX6IC.js','/build/_shared/chunk-IU43IUTG.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-ULGJGYNW.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/_index':{'id':'routes/_index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/_index-JWWAXMPA.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/blog':{'id':'routes/blog','parentId':'root','path':'blog','index':undefined,'caseSensitive':undefined,'module':'/build/routes/blog-2LPAHOXX.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/blog_.$postSlug':{'id':'routes/blog_.$postSlug','parentId':'root','path':'blog/:postSlug','index':undefined,'caseSensitive':undefined,'module':'/build/routes/blog_.$postSlug-BTAJ5RIR.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/dash':{'id':'routes/dash','parentId':'root','path':'dash','index':undefined,'caseSensitive':undefined,'module':'/build/routes/dash-V3TTHY5K.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/dash_.$postId.edit':{'id':'routes/dash_.$postId.edit','parentId':'root','path':'dash/:postId/edit','index':undefined,'caseSensitive':undefined,'module':'/build/routes/dash_.$postId.edit-AF2ANEB5.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/feed[.]atom':{'id':'routes/feed[.]atom','parentId':'root','path':'feed.atom','index':undefined,'caseSensitive':undefined,'module':'/build/routes/feed[.]atom-5QBXDB6R.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/feed[.]json':{'id':'routes/feed[.]json','parentId':'root','path':'feed.json','index':undefined,'caseSensitive':undefined,'module':'/build/routes/feed[.]json-M6N7EEBK.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/feed[.]xml':{'id':'routes/feed[.]xml','parentId':'root','path':'feed.xml','index':undefined,'caseSensitive':undefined,'module':'/build/routes/feed[.]xml-ALQ4HW2Z.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/login':{'id':'routes/login','parentId':'root','path':'login','index':undefined,'caseSensitive':undefined,'module':'/build/routes/login-5OETLDFR.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/sitemap[.]xml':{'id':'routes/sitemap[.]xml','parentId':'root','path':'sitemap.xml','index':undefined,'caseSensitive':undefined,'module':'/build/routes/sitemap[.]xml-FCQIAROB.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false}},'version':'735024cf','hmr':undefined,'url':'/build/manifest-735024CF.js'};", "\nimport * as entryServer from \"/Users/hectorbliss/courses/blog/curso-blog-remix/app/entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/dash_.$postId.edit.tsx\";\nimport * as route2 from \"./routes/blog_.$postSlug.tsx\";\nimport * as route3 from \"./routes/sitemap[.]xml.tsx\";\nimport * as route4 from \"./routes/feed[.]atom.tsx\";\nimport * as route5 from \"./routes/feed[.]json.tsx\";\nimport * as route6 from \"./routes/feed[.]xml.tsx\";\nimport * as route7 from \"./routes/_index.tsx\";\nimport * as route8 from \"./routes/login.tsx\";\nimport * as route9 from \"./routes/blog.tsx\";\nimport * as route10 from \"./routes/dash.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public/build\";\n  export const future = {\"unstable_dev\":false,\"unstable_postcss\":false,\"unstable_tailwind\":false,\"v2_errorBoundary\":true,\"v2_headers\":true,\"v2_meta\":true,\"v2_normalizeFormMethod\":true,\"v2_routeConvention\":true};\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  \n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/dash_.$postId.edit\": {\n      id: \"routes/dash_.$postId.edit\",\n      parentId: \"root\",\n      path: \"dash/:postId/edit\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/blog_.$postSlug\": {\n      id: \"routes/blog_.$postSlug\",\n      parentId: \"root\",\n      path: \"blog/:postSlug\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/sitemap[.]xml\": {\n      id: \"routes/sitemap[.]xml\",\n      parentId: \"root\",\n      path: \"sitemap.xml\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/feed[.]atom\": {\n      id: \"routes/feed[.]atom\",\n      parentId: \"root\",\n      path: \"feed.atom\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/feed[.]json\": {\n      id: \"routes/feed[.]json\",\n      parentId: \"root\",\n      path: \"feed.json\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/feed[.]xml\": {\n      id: \"routes/feed[.]xml\",\n      parentId: \"root\",\n      path: \"feed.xml\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route6\n    },\n  \"routes/_index\": {\n      id: \"routes/_index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route7\n    },\n  \"routes/login\": {\n      id: \"routes/login\",\n      parentId: \"root\",\n      path: \"login\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route8\n    },\n  \"routes/blog\": {\n      id: \"routes/blog\",\n      parentId: \"root\",\n      path: \"blog\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route9\n    },\n  \"routes/dash\": {\n      id: \"routes/dash\",\n      parentId: \"root\",\n      path: \"dash\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route10\n    }\n  };"],
  "mappings": "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",
  "names": ["cssBundleHref", "isbot", "import_react", "import_jsx_dev_runtime", "import_react", "import_jsx_dev_runtime", "links", "loader", "import_react", "import_jsx_dev_runtime", "loader", "loader", "loader", "loader", "loader", "import_jsx_dev_runtime", "action", "loader", "import_node", "import_react", "import_node", "jwtDecode", "import_jsx_dev_runtime", "action", "loader", "loader", "meta", "import_jsx_dev_runtime", "meta", "loader", "action", "loader", "import_react", "import_jsx_dev_runtime"]
}
